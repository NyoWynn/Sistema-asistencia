@model SistemaAsistencia.Models.PagedResult<SistemaAsistencia.Models.AttendanceRecord>
@{
    ViewData["Title"] = "Reporte de Atrasos";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Volver al Panel
    </a>
</div>

<div class="alert alert-info">
    <i class="bi bi-info-circle"></i>
    <strong>Información:</strong> Se muestran los empleados que llegaron después de las 9:30 AM.
</div>

@if (Model.Items.Any())
{
    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th>Empleado</th>
                <th>Fecha</th>
                <th>Hora de Entrada</th>
                <th>Minutos de Retraso</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                var lateTime = new TimeSpan(9, 30, 0);
                var delay = item.Timestamp.TimeOfDay - lateTime;
                <tr>
                    <td>
                        <strong>@Html.DisplayFor(modelItem => item.User.Name)</strong>
                        <br>
                        <small class="text-muted">@Html.DisplayFor(modelItem => item.User.Email)</small>
                    </td>
                    <td>@item.Timestamp.ToString("dd/MM/yyyy")</td>
                    <td>
                        <span class="badge bg-warning text-dark">@item.Timestamp.ToString("HH:mm:ss")</span>
                    </td>
                    <td>
                        <span class="badge bg-danger">@((int)delay.TotalMinutes) min</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @await Html.PartialAsync("_Pagination", Model)
}
else
{
    <div class="alert alert-success text-center">
        <i class="bi bi-check-circle"></i>
        <h4>¡Excelente!</h4>
        <p>No hay registros de llegadas tardías.</p>
    </div>
}